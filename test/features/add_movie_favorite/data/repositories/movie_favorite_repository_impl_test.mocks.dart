// Mocks generated by Mockito 5.4.4 from annotations
// in cinema_club/test/features/add_movie_favorite/data/repositories/movie_favorite_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:cinema_club/core/network/network_info.dart' as _i7;
import 'package:cinema_club/features/add_movie_favorite/data/datasources/local_data_source/movie_favorite_local_data_source.dart'
    as _i2;
import 'package:cinema_club/features/add_movie_favorite/data/datasources/remote_data_source/movie_favorite_remote_data_source.dart'
    as _i6;
import 'package:cinema_club/features/add_movie_favorite/data/models/movie_favorite_model.dart'
    as _i5;
import 'package:cinema_club/features/moviedetails/data/models/movie_details_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MovieFavoriteLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieFavoriteLocalDataSource extends _i1.Mock
    implements _i2.MovieFavoriteLocalDataSource {
  @override
  _i3.Future<void> addMovieToFavorite(_i4.MovieDetailsModel? moive) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMovieToFavorite,
          [moive],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> delteMoviefromFavorite(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #delteMoviefromFavorite,
          [movieId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteAll() => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.MovieFavoriteModel>> getMovies() => (super.noSuchMethod(
        Invocation.method(
          #getMovies,
          [],
        ),
        returnValue: _i3.Future<List<_i5.MovieFavoriteModel>>.value(
            <_i5.MovieFavoriteModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.MovieFavoriteModel>>.value(
                <_i5.MovieFavoriteModel>[]),
      ) as _i3.Future<List<_i5.MovieFavoriteModel>>);
}

/// A class which mocks [MovieFavoriteRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieFavoriteRemoteDataSource extends _i1.Mock
    implements _i6.MovieFavoriteRemoteDataSource {
  @override
  _i3.Future<void> addRemoteMovieToFavorite(_i5.MovieFavoriteModel? movie) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRemoteMovieToFavorite,
          [movie],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteRemoteMovieFromFavorite(int? movieId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteRemoteMovieFromFavorite,
          [movieId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<List<_i5.MovieFavoriteModel>> getRemoteFavoriteMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getRemoteFavoriteMovies,
          [],
        ),
        returnValue: _i3.Future<List<_i5.MovieFavoriteModel>>.value(
            <_i5.MovieFavoriteModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.MovieFavoriteModel>>.value(
                <_i5.MovieFavoriteModel>[]),
      ) as _i3.Future<List<_i5.MovieFavoriteModel>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i7.NetworkInfo {
  @override
  _i3.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}
