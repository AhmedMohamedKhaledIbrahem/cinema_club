// Mocks generated by Mockito 5.4.4 from annotations
// in cinema_club/test/features/add_movie_favorite/data/datasources/movie_favorite_local_data_source_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:cinema_club/features/add_movie_favorite/data/datasources/local_data_source/movie_favorite_dao.dart'
    as _i2;
import 'package:cinema_club/features/add_movie_favorite/data/models/movie_favorite_model.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MovieFavoriteDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieFavoriteDao extends _i1.Mock implements _i2.MovieFavoriteDao {
  @override
  _i3.Future<List<_i4.MovieFavoriteModel>> getMovies() => (super.noSuchMethod(
        Invocation.method(
          #getMovies,
          [],
        ),
        returnValue: _i3.Future<List<_i4.MovieFavoriteModel>>.value(
            <_i4.MovieFavoriteModel>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.MovieFavoriteModel>>.value(
                <_i4.MovieFavoriteModel>[]),
      ) as _i3.Future<List<_i4.MovieFavoriteModel>>);

  @override
  _i3.Future<void> addMovietoFavorite(_i4.MovieFavoriteModel? moive) =>
      (super.noSuchMethod(
        Invocation.method(
          #addMovietoFavorite,
          [moive],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteMovieFromFavorite(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #deleteMovieFromFavorite,
          [movieId],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteAll() => (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
